name: Push Apply

on:
  push:
    branches:
      - main

permissions:
  contents: read
  pull-requests: write

jobs:
  apply:
    runs-on: ubuntu-latest
    name: Apply approved plan
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # - name: terraform apply
      #   uses: dflook/terraform-apply@v1
      #   with:
      #     path: .
      #     # target: local_file.${{ env.BRANCH_NAME }}

      # - name: $github
      #   run: echo "$GITHUB_CONTEXT"
      #   env:
      #     GITHUB_CONTEXT: ${{ toJson(github) }}

      # - name: echo head_commit message
      #   run: |
      #     echo "HEAD_COMMIT_MESSAGE<<EOF" >> $GITHUB_ENV
      #     echo "${{ github.event.head_commit.message }}" >> $GITHUB_ENV
      #     echo "EOF" >> $GITHUB_ENV
      # - name: echo head_commit message
      #   run: |
      #     echo "HEAD_COMMIT_MESSAGE=$(echo '${{ github.event.head_commit.message }}' | tr '\n' ' ')" >> $GITHUB_ENV

      # - name: test head_commit message
      #   run: echo "CUSTOMER=$(echo '${{ env.HEAD_COMMIT_MESSAGE }}' | cut -d ':' -f2 | cut -d ' ' -f2)" >> $GITHUB_ENV

      # - name: test var
      #   run: echo $CUSTOMER

      - name: echo head_commit message 2
        run: |
          echo "CUSTOMER=$(echo '${{ github.event.head_commit.message }}' | tr '\n' ' ' | cut -d ':' -f2 | cut -d ' ' -f2)" >> $GITHUB_ENV

      - name: test var
        run: echo $CUSTOMER

      # - name: terraform apply
      #   uses: dflook/terraform-apply@v1
      #   with:
      #     path: .
      #     target: local_file.${{ env.CUSTOMER }}

      - name: test contains
        if: contains(github.event.head_commit.message, 'customer:')
        run: |
          echo "contains 'customer: '"

      - name: test not contains
        if: "!contains(github.event.head_commit.message, 'customer:')"
        run: |
          echo "not contains 'customer: '"